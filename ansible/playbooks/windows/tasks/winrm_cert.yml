---
# ===============================
# 1Ô∏è‚É£ Install & Import Certificate
# ===============================
- name: üõ°Ô∏è Create directory for certificate
  ansible.windows.win_file:
    path: "{{ winrm_cert_pfx_path | dirname }}"
    state: directory

- name: üîê Copy WinRM certificate PFX file
  ansible.windows.win_copy:
    src: "{{ winrm_cert_pfx_path }}"
    dest: "{{ winrm_cert_pfx_path }}"
  when: winrm_cert_pfx_path is file

- name: üì• Import certificate to LocalMachine\My store
  ansible.windows.win_certificate_store:
    path: "{{ winrm_cert_pfx_path }}"
    password: "{{ winrm_cert_password }}"
    store_name: My
    state: present
    key_exportable: yes
    store_location: LocalMachine

# ===============================
# 2Ô∏è‚É£ Get Certificate Thumbprint
# ===============================
- name: üîé Get imported certificate thumbprint automatically
  ansible.windows.win_shell: |
    $cert = Get-ChildItem -Path Cert:\LocalMachine\My |
      Where-Object { $_.Subject -like "*CN={{ winrm_hostname }}*" } |
      Sort-Object NotAfter -Descending |
      Select-Object -First 1
    $cert.Thumbprint
  register: winrm_cert_thumbprint_raw

- name: üß© Set winrm_cert_thumbprint fact
  set_fact:
    winrm_cert_thumbprint: "{{ winrm_cert_thumbprint_raw.stdout_lines[0] | trim | replace(' ', '') }}"

- name: üì¢ Debug detected thumbprint
  ansible.builtin.debug:
    msg: "Detected WinRM HTTPS certificate thumbprint: {{ winrm_cert_thumbprint }}"

# ===============================
# 3Ô∏è‚É£ Configure HTTPS WinRM Listener
# ===============================
- name: ‚úÖ Ensure HTTPS WinRM listener is present
  ansible.windows.winrm:
    transport: https
    certificate_thumbprint: "{{ winrm_cert_thumbprint }}"
    hostname: "{{ winrm_hostname }}"
    port: 5986
    state: present
    ipv4: '*'

- name: üß© Enable WinRM Certificate Authentication
  ansible.windows.win_shell: |
    winrm set winrm/config/service/auth '@{Certificate="true"}'

- name: üî• Allow WinRM HTTPS in firewall
  ansible.windows.win_firewall_rule:
    name: "WinRM over HTTPS"
    localport: 5986
    action: allow
    direction: in
    protocol: tcp
    state: present
    profile: "{{ win_firewall_profile }}"

# ===============================
# 4Ô∏è‚É£ Test HTTPS Connectivity
# ===============================
- name: üîç Test WinRM HTTPS connectivity from Ansible control node
  delegate_to: localhost
  ansible.builtin.shell: |
    pwsh -NoProfile -Command "
      try {
        Test-WSMan -ComputerName {{ winrm_hostname }} -Port 5986 -Authentication Default -UseSSL | Out-Null
        Write-Output 'OK'
      } catch { Write-Output 'FAIL' }
    "
  register: winrm_https_test
  changed_when: false

- name: ‚ö†Ô∏è Warn if HTTPS WinRM test failed
  ansible.builtin.debug:
    msg: "‚ö†Ô∏è HTTPS WinRM connection failed. Falling back to HTTP."
  when: winrm_https_test.stdout is search('FAIL')

# ===============================
# 5Ô∏è‚É£ Fallback to HTTP if Needed
# ===============================
- name: üõë Remove HTTPS listener if broken
  ansible.windows.winrm:
    transport: https
    state: absent
  when: winrm_https_test.stdout is search('FAIL')

- name: ‚ôªÔ∏è Ensure HTTP WinRM listener is present (fallback)
  ansible.windows.winrm:
    transport: http
    hostname: "{{ winrm_hostname }}"
    port: 5985
    state: present
    ipv4: '*'
  when: winrm_https_test.stdout is search('FAIL')

- name: üî• Allow WinRM HTTP in firewall (fallback)
  ansible.windows.win_firewall_rule:
    name: "WinRM over HTTP"
    localport: 5985
    action: allow
    direction: in
    protocol: tcp
    state: present
    profile: "{{ win_firewall_profile }}"
  when: winrm_https_test.stdout is search('FAIL')

# ===============================
# 6Ô∏è‚É£ Update Runtime Inventory
# ===============================
- name: üìù Switch connection variables in memory to HTTP
  set_fact:
    ansible_winrm_transport: basic
    ansible_port: 5985
    ansible_winrm_server_cert_validation: ignore
  when: winrm_https_test.stdout is search('FAIL')

- name: üíæ Persist connection change to runtime hostvars
  add_host:
    name: "{{ inventory_hostname }}"
    ansible_winrm_transport: basic
    ansible_port: 5985
    ansible_winrm_server_cert_validation: ignore
  when: winrm_https_test.stdout is search('FAIL')
